import { VTextField } from 'vuetify/components';
import { FieldProps, InputProps } from '../../../../types/inputs/FieldProps';

export type TextFieldProps = FieldProps & InputProps & {
    active?: VTextField['$props']['active'];
    appendIcon?: VTextField['$props']['appendIcon'];
    appendInnerIcon?: VTextField['$props']['appendInnerIcon'];
    autofocus?: VTextField['$props']['autofocus'];
    baseColor?: VTextField['$props']['baseColor'];
    bgColor?: VTextField['$props']['bgColor'];
    centerAffix?: VTextField['$props']['centerAffix'];
    clearable?: VTextField['$props']['clearable'];
    clearIcon?: VTextField['$props']['clearIcon'];
    counter?: VTextField['$props']['counter'];
    counterValue?: VTextField['$props']['counterValue'];
    density?: VTextField['$props']['density'];
    direction?: VTextField['$props']['direction'];
    dirty?: VTextField['$props']['dirty'];
    flat?: VTextField['$props']['flat'];
    focused?: VTextField['$props']['focused'];
    hideSpinButtons?: VTextField['$props']['hideSpinButtons'];
    hint?: VTextField['$props']['hint'];
    id?: VTextField['$props']['id'];
    loading?: VTextField['$props']['loading'];
    maxErrors?: VTextField['$props']['maxErrors'];
    maxWidth?: VTextField['$props']['maxWidth'];
    messages?: VTextField['$props']['messages'];
    minWidth?: VTextField['$props']['minWidth'];
    persistentClear?: VTextField['$props']['persistentClear'];
    persistentCounter?: VTextField['$props']['persistentCounter'];
    persistentHint?: VTextField['$props']['persistentHint'];
    persistentPlaceholder?: VTextField['$props']['persistentPlaceholder'];
    prefix?: VTextField['$props']['prefix'];
    prependIcon?: VTextField['$props']['prependIcon'];
    prependInnerIcon?: VTextField['$props']['prependInnerIcon'];
    readonly?: VTextField['$props']['readonly'];
    reverse?: VTextField['$props']['reverse'];
    role?: VTextField['$props']['role'];
    singleLine?: VTextField['$props']['singleLine'];
    suffix?: VTextField['$props']['suffix'];
    theme?: VTextField['$props']['theme'];
    tile?: VTextField['$props']['tile'];
    type?: VTextField['$props']['type'];
    validateOn?: VTextField['$props']['validateOn'];
    validationValue?: VTextField['$props']['validationValue'];
    width?: VTextField['$props']['width'];
    value?: any;
};
